{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nexport class CreateComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      // Your form data is valid, and you can submit it here.\n      console.log(form.value);\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n  addItem(newItem) {\n    this.dataService.addItem(newItem);\n  }\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 12,\n  vars: 0,\n  consts: [[3, \"ngSubmit\"], [\"myForm\", \"gForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\"], [\"for\", \"description\"], [\"type\", \"textarea\", \"id\", \"description\", \"name\", \"description\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_0_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CreateComponent","constructor","dataService","onSubmit","form","valid","console","log","value","addItem","newItem","i0","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","CreateComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreateComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/create/create.component.ts","/var/www/html/PLI/angular-crud-app/src/app/create/create.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from \"../data.service\";\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent {\n  constructor(private dataService : DataService) {}\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      // Your form data is valid, and you can submit it here.\n      console.log(form.value);\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n\n  addItem(newItem : any) {\n    this.dataService.addItem(newItem);\n  }\n\n}\n","<form #myForm=\"gForm\" (ngSubmit)=\"onSubmit(myForm)\">\n    <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" ngModel required>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"description\">Description:</label>\n        <input type=\"textarea\" id=\"description\" name=\"description\" ngModel required>\n    </div>\n\n    <button type=\"submit\">Submit</button>\n</form>\n\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,WAAyB;IAAzB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQA,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd;MACAC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,KAAK,CAAC;KACxB,MAAM;MACL;MACA;IAAA;EAEJ;EAEAC,OAAOA,CAACC,OAAa;IACnB,IAAI,CAACR,WAAW,CAACO,OAAO,CAACC,OAAO,CAAC;EACnC;;AAfWV,eAAe,C;mBAAfA,eAAe,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAfd,eAAe,C;QAAfA,eAAe;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCT5BV,EAAA,CAAAY,cAAA,iBAAoD;MAA9BZ,EAAA,CAAAa,UAAA,sBAAAC,kDAAA;QAAAd,EAAA,CAAAe,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAjB,EAAA,CAAAkB,WAAA;QAAA,OAAYlB,EAAA,CAAAmB,WAAA,CAAAR,GAAA,CAAAnB,QAAA,CAAAyB,GAAA,CAAgB;MAAA,EAAC;MAC/CjB,EAAA,CAAAY,cAAA,aAAwB;MACFZ,EAAA,CAAAoB,MAAA,YAAK;MAAApB,EAAA,CAAAqB,YAAA,EAAQ;MAC/BrB,EAAA,CAAAsB,SAAA,eAA0D;MAC9DtB,EAAA,CAAAqB,YAAA,EAAM;MAENrB,EAAA,CAAAY,cAAA,aAAwB;MACKZ,EAAA,CAAAoB,MAAA,mBAAY;MAAApB,EAAA,CAAAqB,YAAA,EAAQ;MAC7CrB,EAAA,CAAAsB,SAAA,eAA4E;MAChFtB,EAAA,CAAAqB,YAAA,EAAM;MAENrB,EAAA,CAAAY,cAAA,iBAAsB;MAAAZ,EAAA,CAAAoB,MAAA,cAAM;MAAApB,EAAA,CAAAqB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}