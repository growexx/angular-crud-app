{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseURL = 'http://127.0.0.1:8000/api/items';\n// const baseURL = \"https://jsonplaceholder.typicode.com/todos\";\nexport class DataService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.items = [];\n  }\n  getItems() {\n    return this.httpClient.get(baseURL).toPromise().then(response => response);\n  }\n  deleteItem(id) {\n    return this.httpClient.delete(baseURL + id).toPromise().then(response => response);\n  }\n  addItem(item) {\n    return this.httpClient.post(baseURL, JSON.stringify(item)).toPromise().then(response => response);\n  }\n  findItem(id) {\n    return this.httpClient.get(baseURL + id + 'edit').toPromise().then(response => response);\n  }\n  updateItem(id, item) {\n    return this.httpClient.put(baseURL + id, JSON.stringify(person)).pipe(catchError(this.errorHandler));\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["baseURL","DataService","constructor","httpClient","items","getItems","get","toPromise","then","response","deleteItem","id","delete","addItem","item","post","JSON","stringify","findItem","updateItem","put","person","pipe","catchError","errorHandler","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseURL = 'http://127.0.0.1:8000/api/items';\n// const baseURL = \"https://jsonplaceholder.typicode.com/todos\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private items: any[] = [];\n\n  constructor(private httpClient: HttpClient) { }\n\n  getItems(): any {\n    return this.httpClient\n    .get(baseURL).toPromise()\n    .then((response: any) => response);\n  }\n\n  deleteItem(id : any) {\n    return this.httpClient\n    .delete(baseURL + id).toPromise()\n    .then((response: any) => response);\n  }\n\n  addItem(item: any) {\n    return this.httpClient\n    .post(baseURL, JSON.stringify(item)).toPromise()\n    .then((response: any) => response);\n  }\n\n  findItem(id : any) {\n    return this.httpClient.get(baseURL + id + 'edit').toPromise()\n    .then((response: any) => response);\n  }\n\n  updateItem(id, item) {\n    return this.httpClient.put(baseURL + id, JSON.stringify(person))\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n\n\n  // updateItem(updatedItem: any) {\n  //   const index = this.items.findIndex(item => item.id === updatedItem.id);\n  //   if (index !== -1) {\n  //     this.items[index] = updatedItem;\n  //   }\n  // }\n\n  // deleteItem(id: number) {\n  //   this.items = this.items.filter(item => item.id !== id);\n  // }\n}\n"],"mappings":";;AAGA,MAAMA,OAAO,GAAG,iCAAiC;AACjD;AAIA,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,KAAK,GAAU,EAAE;EAEqB;EAE9CC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,UAAU,CACrBG,GAAG,CAACN,OAAO,CAAC,CAACO,SAAS,EAAE,CACxBC,IAAI,CAAEC,QAAa,IAAKA,QAAQ,CAAC;EACpC;EAEAC,UAAUA,CAACC,EAAQ;IACjB,OAAO,IAAI,CAACR,UAAU,CACrBS,MAAM,CAACZ,OAAO,GAAGW,EAAE,CAAC,CAACJ,SAAS,EAAE,CAChCC,IAAI,CAAEC,QAAa,IAAKA,QAAQ,CAAC;EACpC;EAEAI,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACX,UAAU,CACrBY,IAAI,CAACf,OAAO,EAAEgB,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC,CAACP,SAAS,EAAE,CAC/CC,IAAI,CAAEC,QAAa,IAAKA,QAAQ,CAAC;EACpC;EAEAS,QAAQA,CAACP,EAAQ;IACf,OAAO,IAAI,CAACR,UAAU,CAACG,GAAG,CAACN,OAAO,GAAGW,EAAE,GAAG,MAAM,CAAC,CAACJ,SAAS,EAAE,CAC5DC,IAAI,CAAEC,QAAa,IAAKA,QAAQ,CAAC;EACpC;EAEAU,UAAUA,CAACR,EAAE,EAAEG,IAAI;IACjB,OAAO,IAAI,CAACX,UAAU,CAACiB,GAAG,CAACpB,OAAO,GAAGW,EAAE,EAAEK,IAAI,CAACC,SAAS,CAACI,MAAM,CAAC,CAAC,CAC/DC,IAAI,CACHC,UAAU,CAAC,IAAI,CAACC,YAAY,CAAC,CAC9B;EACH;;AAjCWvB,WAAW,C;mBAAXA,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAX3B,WAAW,C;SAAXA,WAAW;EAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}