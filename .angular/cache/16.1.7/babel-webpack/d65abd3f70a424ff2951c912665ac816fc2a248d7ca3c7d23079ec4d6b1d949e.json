{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Description is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      // Your form data is valid, and you can submit it here.\n      console.log(form.value);\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n  addItem(newItem) {\n    this.dataService.addItem(newItem);\n  }\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"description\"], [\"type\", \"textarea\", \"id\", \"description\", \"name\", \"description\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\"], [1, \"error\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_0_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵtemplate(6, CreateComponent_div_6_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵtemplate(11, CreateComponent_div_11_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 8);\n      i0.ɵɵtext(13, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls.name.touched && _r0.controls.name.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls.name.touched && _r0.controls.description.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CreateComponent","constructor","dataService","onSubmit","form","valid","console","log","value","addItem","newItem","ɵɵdirectiveInject","i1","DataService","selectors","decls","vars","consts","template","CreateComponent_Template","rf","ctx","ɵɵlistener","CreateComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","CreateComponent_div_6_Template","CreateComponent_div_11_Template","ɵɵadvance","ɵɵproperty","controls","name","touched","invalid","description"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/create/create.component.ts","/var/www/html/PLI/angular-crud-app/src/app/create/create.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from \"../data.service\";\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent {\n  constructor(private dataService : DataService) {}\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      // Your form data is valid, and you can submit it here.\n      console.log(form.value);\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n\n  addItem(newItem : any) {\n    this.dataService.addItem(newItem);\n  }\n\n}\n","<form #myForm=\"ngForm\" (ngSubmit)=\"onSubmit(myForm)\">\n    <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" ngModel required>\n        <div *ngIf=\"myForm.controls.name.touched && myForm.controls.name.invalid\" class=\"error\">\n            Name is required.\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"description\">Description:</label>\n        <input type=\"textarea\" id=\"description\" name=\"description\" ngModel required>\n        <div *ngIf=\"myForm.controls.name.touched && myForm.controls.description.invalid\" class=\"error\">\n            Description is required.\n        </div>\n    </div>\n\n    <button type=\"submit\">Submit</button>\n</form>\n\n"],"mappings":";;;;;;ICIQA,EAAA,CAAAC,cAAA,aAAwF;IACpFD,EAAA,CAAAE,MAAA,0BACJ;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAMNH,EAAA,CAAAC,cAAA,aAA+F;IAC3FD,EAAA,CAAAE,MAAA,iCACJ;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADLd,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,WAAyB;IAAzB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQA,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd;MACAC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,KAAK,CAAC;KACxB,MAAM;MACL;MACA;IAAA;EAEJ;EAEAC,OAAOA,CAACC,OAAa;IACnB,IAAI,CAACR,WAAW,CAACO,OAAO,CAACC,OAAO,CAAC;EACnC;;AAfWV,eAAe,C;mBAAfA,eAAe,EAAAJ,EAAA,CAAAe,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAfb,eAAe,C;QAAfA,eAAe;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCT5BxB,EAAA,CAAAC,cAAA,iBAAqD;MAA9BD,EAAA,CAAA0B,UAAA,sBAAAC,kDAAA;QAAA3B,EAAA,CAAA4B,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAA9B,EAAA,CAAA+B,WAAA;QAAA,OAAY/B,EAAA,CAAAgC,WAAA,CAAAP,GAAA,CAAAlB,QAAA,CAAAuB,GAAA,CAAgB;MAAA,EAAC;MAChD9B,EAAA,CAAAC,cAAA,aAAwB;MACFD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAC/BH,EAAA,CAAAiC,SAAA,eAA0D;MAC1DjC,EAAA,CAAAkC,UAAA,IAAAC,8BAAA,iBAEM;MACVnC,EAAA,CAAAG,YAAA,EAAM;MAENH,EAAA,CAAAC,cAAA,aAAwB;MACKD,EAAA,CAAAE,MAAA,mBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAC7CH,EAAA,CAAAiC,SAAA,gBAA4E;MAC5EjC,EAAA,CAAAkC,UAAA,KAAAE,+BAAA,iBAEM;MACVpC,EAAA,CAAAG,YAAA,EAAM;MAENH,EAAA,CAAAC,cAAA,iBAAsB;MAAAD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;;MAb3BH,EAAA,CAAAqC,SAAA,GAAkE;MAAlErC,EAAA,CAAAsC,UAAA,SAAAR,GAAA,CAAAS,QAAA,CAAAC,IAAA,CAAAC,OAAA,IAAAX,GAAA,CAAAS,QAAA,CAAAC,IAAA,CAAAE,OAAA,CAAkE;MAQlE1C,EAAA,CAAAqC,SAAA,GAAyE;MAAzErC,EAAA,CAAAsC,UAAA,SAAAR,GAAA,CAAAS,QAAA,CAAAC,IAAA,CAAAC,OAAA,IAAAX,GAAA,CAAAS,QAAA,CAAAI,WAAA,CAAAD,OAAA,CAAyE"},"metadata":{},"sourceType":"module","externalDependencies":[]}