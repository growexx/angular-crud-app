{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {\n    this.items = [];\n  }\n  getItems() {\n    return this.items;\n  }\n  addItem(item) {\n    this.items.push(item);\n  }\n  updateItem(updatedItem) {\n    const index = this.items.findIndex(item => item.id === updatedItem.id);\n    if (index !== -1) {\n      this.items[index] = updatedItem;\n    }\n  }\n  deleteItem(id) {\n    this.items = this.items.filter(item => item.id !== id);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)();\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["DataService","constructor","items","getItems","addItem","item","push","updateItem","updatedItem","index","findIndex","id","deleteItem","filter","factory","ɵfac","providedIn"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Item } from \"./models/item.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private items: any[] = [];\n\n  constructor() {}\n\n  getItems(): any[] {\n    return this.items;\n  }\n\n  addItem(item: any) {\n    this.items.push(item);\n  }\n\n  updateItem(updatedItem: any) {\n    const index = this.items.findIndex(item => item.id === updatedItem.id);\n    if (index !== -1) {\n      this.items[index] = updatedItem;\n    }\n  }\n\n  deleteItem(id: number) {\n    this.items = this.items.filter(item => item.id !== id);\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAGtBC,YAAA;IAFQ,KAAAC,KAAK,GAAU,EAAE;EAEV;EAEfC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACD,KAAK;EACnB;EAEAE,OAAOA,CAACC,IAAS;IACf,IAAI,CAACH,KAAK,CAACI,IAAI,CAACD,IAAI,CAAC;EACvB;EAEAE,UAAUA,CAACC,WAAgB;IACzB,MAAMC,KAAK,GAAG,IAAI,CAACP,KAAK,CAACQ,SAAS,CAACL,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKH,WAAW,CAACG,EAAE,CAAC;IACtE,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACP,KAAK,CAACO,KAAK,CAAC,GAAGD,WAAW;;EAEnC;EAEAI,UAAUA,CAACD,EAAU;IACnB,IAAI,CAACT,KAAK,GAAG,IAAI,CAACA,KAAK,CAACW,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKA,EAAE,CAAC;EACxD;;AAtBWX,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}