{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdateComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Description is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateComponent {\n  constructor(dataService, router, route) {\n    this.dataService = dataService;\n    this.router = router;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.dataService.findItem(this.route.snapshot.params['id']).then(response => {\n      this.data = response.data;\n      console.log(this.data);\n    });\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      this.dataService.updateItem(form.value);\n      // this.addItem(form.value);\n      // Your form data is valid, and you can submit it here.\n      console.log(form.value);\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n  updateItem(id, item) {\n    this.dataService.updateItem(id, item);\n  }\n}\nUpdateComponent.ɵfac = function UpdateComponent_Factory(t) {\n  return new (t || UpdateComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateComponent,\n  selectors: [[\"app-update\"]],\n  decls: 14,\n  vars: 5,\n  consts: [[3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"description\"], [\"type\", \"textarea\", \"id\", \"description\", \"name\", \"description\", \"ngModel\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error\"]],\n  template: function UpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateComponent_Template_form_ngSubmit_0_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.data.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, UpdateComponent_div_6_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.data.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, UpdateComponent_div_11_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 8);\n      i0.ɵɵtext(13, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"name\"].touched && _r0.controls[\"name\"].invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"description\"].touched && _r0.controls[\"description\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","UpdateComponent","constructor","dataService","router","route","ngOnInit","findItem","snapshot","params","then","response","data","console","log","onSubmit","form","valid","updateItem","value","id","item","ɵɵdirectiveInject","i1","DataService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","UpdateComponent_Template","rf","ctx","ɵɵlistener","UpdateComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","UpdateComponent_Template_input_ngModelChange_5_listener","$event","name","ɵɵtemplate","UpdateComponent_div_6_Template","UpdateComponent_Template_input_ngModelChange_10_listener","description","UpdateComponent_div_11_Template","ɵɵadvance","ɵɵproperty","controls","touched","invalid"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/update/update.component.ts","/var/www/html/PLI/angular-crud-app/src/app/update/update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent {\n  data: any;\n  constructor(private dataService : DataService, private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.dataService.findItem(this.route.snapshot.params['id']).then((response: any) => {\n      this.data = response.data;\n      console.log(this.data);\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      this.dataService.updateItem(form.value);\n      // this.addItem(form.value);\n      // Your form data is valid, and you can submit it here.\n      console.log(form.value);\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n\n  updateItem(id : any, item : any) {\n    this.dataService.updateItem(id, item);\n  }\n}\n","<form #myForm=\"ngForm\" (ngSubmit)=\"onSubmit(myForm)\">\n    <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" ngModel required [(ngModel)]=\"data.name\">\n        <div *ngIf=\"myForm.controls['name'].touched && myForm.controls['name'].invalid\" class=\"error\">\n            Name is required.\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"description\">Description:</label>\n        <input type=\"textarea\" id=\"description\" name=\"description\" ngModel required [(ngModel)]=\"data.description\">\n        <div *ngIf=\"myForm.controls['description'].touched && myForm.controls['description'].invalid\" class=\"error\">\n            Description is required.\n        </div>\n    </div>\n\n    <button type=\"submit\" [disabled]=\"myForm.invalid\">Submit</button>\n</form>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}