{"ast":null,"code":"import _asyncToGenerator from \"/var/www/html/PLI/angular-crud-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Headers } from '@angular/http';\nexport let DataService = class DataService {\n  constructor(oktaAuth, http) {\n    this.oktaAuth = oktaAuth;\n    this.http = http;\n    this.items = [];\n    this.init();\n  }\n  init() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.accessToken = yield _this.oktaAuth.getAccessToken();\n      _this.headers = new Headers({\n        Authorization: 'Bearer ' + _this.accessToken\n      });\n    })();\n  }\n  getItems() {\n    return this.items;\n  }\n  addItem(item) {\n    this.items.push(item);\n  }\n  updateItem(updatedItem) {\n    const index = this.items.findIndex(item => item.id === updatedItem.id);\n    if (index !== -1) {\n      this.items[index] = updatedItem;\n    }\n  }\n  deleteItem(id) {\n    this.items = this.items.filter(item => item.id !== id);\n  }\n};\nDataService = __decorate([Injectable({\n  providedIn: 'root'\n})], DataService);","map":{"version":3,"names":["Injectable","Headers","DataService","constructor","oktaAuth","http","items","init","_this","_asyncToGenerator","accessToken","getAccessToken","headers","Authorization","getItems","addItem","item","push","updateItem","updatedItem","index","findIndex","id","deleteItem","filter","__decorate","providedIn"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private items: any[] = [];\n\n  constructor(private oktaAuth: OktaAuthService, private http: Http) {\n    this.init();\n  }\n\n  async init() {\n      this.accessToken = await this.oktaAuth.getAccessToken();\n      this.headers = new Headers({\n          Authorization: 'Bearer ' + this.accessToken\n      });\n  }\n\n  getItems(): any[] {\n    return this.items;\n  }\n\n  addItem(item: any) {\n    this.items.push(item);\n  }\n\n  updateItem(updatedItem: any) {\n    const index = this.items.findIndex(item => item.id === updatedItem.id);\n    if (index !== -1) {\n      this.items[index] = updatedItem;\n    }\n  }\n\n  deleteItem(id: number) {\n    this.items = this.items.filter(item => item.id !== id);\n  }\n}\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAAeC,OAAO,QAAwB,eAAe;AAKtD,WAAMC,WAAW,GAAjB,MAAMA,WAAW;EAGtBC,YAAoBC,QAAyB,EAAUC,IAAU;IAA7C,KAAAD,QAAQ,GAARA,QAAQ;IAA2B,KAAAC,IAAI,GAAJA,IAAI;IAFnD,KAAAC,KAAK,GAAU,EAAE;IAGvB,IAAI,CAACC,IAAI,EAAE;EACb;EAEMA,IAAIA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACND,KAAI,CAACE,WAAW,SAASF,KAAI,CAACJ,QAAQ,CAACO,cAAc,EAAE;MACvDH,KAAI,CAACI,OAAO,GAAG,IAAIX,OAAO,CAAC;QACvBY,aAAa,EAAE,SAAS,GAAGL,KAAI,CAACE;OACnC,CAAC;IAAC;EACP;EAEAI,QAAQA,CAAA;IACN,OAAO,IAAI,CAACR,KAAK;EACnB;EAEAS,OAAOA,CAACC,IAAS;IACf,IAAI,CAACV,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC;EACvB;EAEAE,UAAUA,CAACC,WAAgB;IACzB,MAAMC,KAAK,GAAG,IAAI,CAACd,KAAK,CAACe,SAAS,CAACL,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKH,WAAW,CAACG,EAAE,CAAC;IACtE,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACd,KAAK,CAACc,KAAK,CAAC,GAAGD,WAAW;;EAEnC;EAEAI,UAAUA,CAACD,EAAU;IACnB,IAAI,CAAChB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKA,EAAE,CAAC;EACxD;CACD;AAhCYpB,WAAW,GAAAuB,UAAA,EAHvBzB,UAAU,CAAC;EACV0B,UAAU,EAAE;CACb,CAAC,C,EACWxB,WAAW,CAgCvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}