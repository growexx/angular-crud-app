{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// const baseURL = 'http://localhost:8080/items';\nconst baseURL = \"https://jsonplaceholder.typicode.com/todos\";\nexport class DataService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.items = [];\n  }\n  getItems() {\n    return this.httpClient.get(baseURL);\n  }\n  addItem(item) {\n    this.items.push(item);\n  }\n  getPermissions() {\n    return this.http.get(environment.apiUrl + Routes.BILL_MANAGEMENT.PERMISSIONS).toPromise().then(response => response.data);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["baseURL","DataService","constructor","httpClient","items","getItems","get","addItem","item","push","getPermissions","http","environment","apiUrl","Routes","BILL_MANAGEMENT","PERMISSIONS","toPromise","then","response","data","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// const baseURL = 'http://localhost:8080/items';\nconst baseURL = \"https://jsonplaceholder.typicode.com/todos\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private items: any[] = [];\n\n  constructor(private httpClient: HttpClient) { }\n\n  getItems(): Observable<any> {\n    return this.httpClient.get(baseURL);\n  }\n\n  addItem(item: any) {\n    this.items.push(item);\n  }\n  getPermissions(): any {\n    return this.http\n    .get(environment.apiUrl + Routes.BILL_MANAGEMENT.PERMISSIONS).toPromise()\n    .then((response: any) => response.data);\n    }\n\n  // updateItem(updatedItem: any) {\n  //   const index = this.items.findIndex(item => item.id === updatedItem.id);\n  //   if (index !== -1) {\n  //     this.items[index] = updatedItem;\n  //   }\n  // }\n\n  // deleteItem(id: number) {\n  //   this.items = this.items.filter(item => item.id !== id);\n  // }\n}\n"],"mappings":";;AAIA;AACA,MAAMA,OAAO,GAAG,4CAA4C;AAI5D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,KAAK,GAAU,EAAE;EAEqB;EAE9CC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAACN,OAAO,CAAC;EACrC;EAEAO,OAAOA,CAACC,IAAS;IACf,IAAI,CAACJ,KAAK,CAACK,IAAI,CAACD,IAAI,CAAC;EACvB;EACAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACC,IAAI,CACfL,GAAG,CAACM,WAAW,CAACC,MAAM,GAAGC,MAAM,CAACC,eAAe,CAACC,WAAW,CAAC,CAACC,SAAS,EAAE,CACxEC,IAAI,CAAEC,QAAa,IAAKA,QAAQ,CAACC,IAAI,CAAC;EACvC;;AAhBSnB,WAAW,C;mBAAXA,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXvB,WAAW,C;SAAXA,WAAW;EAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}