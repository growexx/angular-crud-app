{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction UpdateComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Description is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateComponent {\n  constructor(dataService, router, route, toastr) {\n    this.dataService = dataService;\n    this.router = router;\n    this.route = route;\n    this.toastr = toastr;\n  }\n  ngOnInit() {\n    this.dataService.findItem(this.route.snapshot.params['id']).then(response => {\n      this.data = response.data;\n    });\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      this.dataService.updateItem(this.route.snapshot.params['id'], form.value).then(response => {\n        if (response) {\n          this.toastr.success('Custom toast', 'Custom', {\n            timeOut: 3000,\n            progressBar: true,\n            closeButton: true,\n            positionClass: 'toast-top-center' // Toast position\n          });\n\n          this.toastr.success(response.message, 'Success');\n          this.router.navigateByUrl('item');\n        }\n      });\n      ;\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n}\n_class = UpdateComponent;\n_class.ɵfac = function UpdateComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-update\"]],\n  decls: 31,\n  vars: 5,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-6\"], [\"href\", \"#\", \"routerLink\", \"/item\", 1, \"btn\", \"btn-primary\"], [3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [1, \"col-md-2\"], [\"for\", \"name\"], [1, \"col-md-8\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"]],\n  template: function UpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n      i0.ɵɵtext(4, \"Update Item\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"a\", 3);\n      i0.ɵɵtext(7, \"Back\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Name:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"div\", 9)(16, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.data.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, UpdateComponent_div_17_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 1)(19, \"div\", 6)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Description:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 8)(23, \"div\", 9)(24, \"textarea\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateComponent_Template_textarea_ngModelChange_24_listener($event) {\n        return ctx.data.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, UpdateComponent_div_25_Template, 2, 0, \"div\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 1);\n      i0.ɵɵelement(27, \"div\", 6);\n      i0.ɵɵelementStart(28, \"div\", 8)(29, \"button\", 14);\n      i0.ɵɵtext(30, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"name\"].touched && _r0.controls[\"name\"].invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"description\"].touched && _r0.controls[\"description\"].invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i2.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","UpdateComponent","constructor","dataService","router","route","toastr","ngOnInit","findItem","snapshot","params","then","response","data","onSubmit","form","valid","updateItem","value","success","timeOut","progressBar","closeButton","positionClass","message","navigateByUrl","ɵɵdirectiveInject","i1","DataService","i2","Router","ActivatedRoute","i3","ToastrService","selectors","decls","vars","consts","template","UpdateComponent_Template","rf","ctx","ɵɵlistener","UpdateComponent_Template_form_ngSubmit_8_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","UpdateComponent_Template_input_ngModelChange_16_listener","$event","name","ɵɵtemplate","UpdateComponent_div_17_Template","UpdateComponent_Template_textarea_ngModelChange_24_listener","description","UpdateComponent_div_25_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","controls","touched","invalid"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/update/update.component.ts","/var/www/html/PLI/angular-crud-app/src/app/update/update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent {\n  data: any;\n  constructor(private dataService : DataService, private router: Router, private route: ActivatedRoute, private toastr: ToastrService) {}\n\n  ngOnInit(): void {\n    this.dataService.findItem(this.route.snapshot.params['id']).then((response: any) => {\n      this.data = response.data;\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      this.dataService.updateItem(this.route.snapshot.params['id'], form.value).then((response: any) => {\n        if (response) {\n          this.toastr.success('Custom toast', 'Custom', {\n            timeOut: 3000, // Duration in milliseconds\n            progressBar: true, // Show progress bar\n            closeButton: true, // Show close button\n            positionClass: 'toast-top-center', // Toast position\n          });\n          this.toastr.success(response.message, 'Success');\n          this.router.navigateByUrl('item');\n        }\n      });;\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <h2>Update Item</h2>\n        </div>\n        <div class=\"col-md-6\">\n            <a href=\"#\" routerLink=\"/item\" class=\"btn btn-primary\">Back</a>\n        </div>\n    </div>\n    <form #myForm=\"ngForm\" (ngSubmit)=\"onSubmit(myForm)\">\n        <div class=\"row\">\n            <div class=\"col-md-2\">\n                <label for=\"name\">Name:</label>\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" ngModel required [(ngModel)]=\"data.name\">\n                    <div *ngIf=\"myForm.controls['name'].touched && myForm.controls['name'].invalid\" class=\"alert alert-danger\">\n                        Name is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-2\">\n                <label for=\"description\">Description:</label>\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"form-group\">\n                    <textarea id=\"description\" class=\"form-control\" name=\"description\" ngModel required [(ngModel)]=\"data.description\"></textarea>\n                    <div *ngIf=\"myForm.controls['description'].touched && myForm.controls['description'].invalid\" class=\"alert alert-danger\">\n                        Description is required.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-2\"></div>\n            <div class=\"col-md-8\">\n                <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"myForm.invalid\">Submit</button>\n            </div>\n        </div>\n    </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}