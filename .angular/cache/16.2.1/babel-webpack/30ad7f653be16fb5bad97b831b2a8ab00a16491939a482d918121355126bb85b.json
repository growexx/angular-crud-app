{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UpdateComponent = class UpdateComponent {\n  constructor(dataService, router, route, toastr) {\n    this.dataService = dataService;\n    this.router = router;\n    this.route = route;\n    this.toastr = toastr;\n  }\n  ngOnInit() {\n    this.dataService.findItem(this.route.snapshot.params['id']).then(response => {\n      this.data = response.data;\n    });\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      this.dataService.updateItem(this.route.snapshot.params['id'], form.value).then(response => {\n        if (response) {\n          this.router.navigateByUrl('item');\n        }\n      });\n      ;\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n};\nUpdateComponent = __decorate([Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})], UpdateComponent);","map":{"version":3,"names":["Component","UpdateComponent","constructor","dataService","router","route","toastr","ngOnInit","findItem","snapshot","params","then","response","data","onSubmit","form","valid","updateItem","value","navigateByUrl","__decorate","selector","templateUrl","styleUrls"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/update/update.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent {\n  data: any;\n  constructor(private dataService : DataService, private router: Router, private route: ActivatedRoute, private toastr: ToastrService) {}\n\n  ngOnInit(): void {\n    this.dataService.findItem(this.route.snapshot.params['id']).then((response: any) => {\n      this.data = response.data;\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      this.dataService.updateItem(this.route.snapshot.params['id'], form.value).then((response: any) => {\n        if (response) {\n          this.router.navigateByUrl('item');\n        }\n      });;\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAE1BC,YAAoBC,WAAyB,EAAUC,MAAc,EAAUC,KAAqB,EAAUC,MAAqB;IAA/G,KAAAH,WAAW,GAAXA,WAAW;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAkB;EAEtIC,QAAQA,CAAA;IACN,IAAI,CAACJ,WAAW,CAACK,QAAQ,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAa,IAAI;MACjF,IAAI,CAACC,IAAI,GAAGD,QAAQ,CAACC,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAACC,IAAY;IACnB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,IAAI,CAACb,WAAW,CAACc,UAAU,CAAC,IAAI,CAACZ,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC,EAAEK,IAAI,CAACG,KAAK,CAAC,CAACP,IAAI,CAAEC,QAAa,IAAI;QAC/F,IAAIA,QAAQ,EAAE;UACZ,IAAI,CAACR,MAAM,CAACe,aAAa,CAAC,MAAM,CAAC;;MAErC,CAAC,CAAC;MAAC;KACJ,MAAM;MACL;MACA;IAAA;EAEJ;CACD;AAtBYlB,eAAe,GAAAmB,UAAA,EAL3BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWtB,eAAe,CAsB3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}