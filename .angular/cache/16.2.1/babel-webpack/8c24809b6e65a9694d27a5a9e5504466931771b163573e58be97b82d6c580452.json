{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CreateComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Description is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateComponent {\n  constructor(dataService, router) {\n    this.dataService = dataService;\n    this.router = router;\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      this.dataService.addItem(form.value).then(response => {\n        if (response) {\n          this.router.navigateByUrl('item');\n        }\n      });\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n}\n_class = CreateComponent;\n_class.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-create\"]],\n  decls: 24,\n  vars: 3,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-6\"], [\"href\", \"#\", \"routerLink\", \"/item\", 1, \"btn\", \"btn-primary\"], [3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [1, \"col-md-4\"], [\"for\", \"name\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n      i0.ɵɵtext(4, \"Create Item\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"a\", 3);\n      i0.ɵɵtext(7, \"Back\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(10, \"div\", 1);\n      i0.ɵɵelement(11, \"div\", 6);\n      i0.ɵɵelementStart(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵtemplate(16, CreateComponent_div_16_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"textarea\", 12);\n      i0.ɵɵtemplate(21, CreateComponent_div_21_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 13);\n      i0.ɵɵtext(23, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"name\"].touched && _r0.controls[\"name\"].invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", _r0.controls[\"description\"].touched && _r0.controls[\"description\"].invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CreateComponent","constructor","dataService","router","onSubmit","form","valid","addItem","value","then","response","navigateByUrl","ɵɵdirectiveInject","i1","DataService","i2","Router","selectors","decls","vars","consts","template","CreateComponent_Template","rf","ctx","ɵɵlistener","CreateComponent_Template_form_ngSubmit_8_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","CreateComponent_div_16_Template","CreateComponent_div_21_Template","ɵɵadvance","ɵɵproperty","controls","touched","invalid"],"sources":["/var/www/html/PLI/angular-crud-app/src/app/create/create.component.ts","/var/www/html/PLI/angular-crud-app/src/app/create/create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataService } from \"../data.service\";\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent {\n  constructor(private dataService : DataService, private router: Router) {}\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      this.dataService.addItem(form.value).then((response: any) => {\n        if (response) {\n          this.router.navigateByUrl('item');\n        }\n      });\n    } else {\n      // Handle form validation errors.\n      // You can access form.errors and form.controls to get specific error details.\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <h2>Create Item</h2>\n        </div>\n        <div class=\"col-md-6\">\n            <a href=\"#\" routerLink=\"/item\" class=\"btn btn-primary\">Back</a>\n        </div>\n    </div>\n    <form #myForm=\"ngForm\" (ngSubmit)=\"onSubmit(myForm)\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                \n            </div>\n            <label for=\"name\">Name:</label>\n            <div class=\"form-group\">\n                <input type=\"text\" id=\"name\" name=\"name\" ngModel required>\n                <div *ngIf=\"myForm.controls['name'].touched && myForm.controls['name'].invalid\" class=\"alert alert-danger\">\n                    Name is required.\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"description\">Description:</label>\n            <textarea id=\"description\" name=\"description\" ngModel required></textarea>\n            <div *ngIf=\"myForm.controls['description'].touched && myForm.controls['description'].invalid\" class=\"alert alert-danger\">\n                Description is required.\n            </div>\n        </div>\n\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"myForm.invalid\">Submit</button>\n    </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}